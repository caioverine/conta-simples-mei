name: Deploy to EC2 (Staging) - Remote Build
on:
  push:
    branches:
      - staging

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: STAGING
    
    steps:
      - name: Checkout do cÃ³digo
        uses: actions/checkout@v4
        
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
      
      # ===== BUILD REMOTO NO GITHUB ACTIONS =====
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/myapp:latest,${{ secrets.DOCKER_USERNAME }}/myapp:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          
      # ===== DEPLOY NO EC2 (APENAS PULL) =====
      - name: Deploy to EC2
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "
            cd ${{ secrets.EC2_DEPLOY_PATH }}/backend
            
            # Parar containers existentes
            docker-compose -f docker-compose.staging.yml down || true
            
            # Limpar imagens antigas
            docker image prune -f
            
            # Fazer login no Docker Hub
            echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u '${{ secrets.DOCKER_USERNAME }}' --password-stdin
            
            # Pull da nova imagem
            docker pull ${{ secrets.DOCKER_USERNAME }}/myapp:latest
            
            # Subir containers
            docker-compose -f docker-compose.staging.yml up -d
            
            # Aguardar inicializaÃ§Ã£o
            sleep 30
            
            # Verificar status
            docker-compose -f docker-compose.staging.yml ps
            
            # Health check
            timeout 60s bash -c 'until curl -sf http://localhost:8080/actuator/health; do echo \"Aguardando...\"; sleep 5; done' || {
              echo 'Health check falhou'
              docker-compose -f docker-compose.staging.yml logs --tail=50
              exit 1
            }
            
            echo 'ðŸš€ Deploy concluÃ­do com sucesso!'
          "
          
      - name: Cleanup
        if: always()
        run: |
          # Limpar credenciais SSH
          rm -f ~/.ssh/id_rsa
app:
  cors:
    allowed-origins: http://localhost:5173,https://contasimplesmei.com,https://www.contasimplesmei.com

spring:
  application:
    name: conta-simples-mei
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
  jackson:
    serialization:
      INDENT_OUTPUT: true
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:prod}
  messages:
    basename: messages
    encoding: UTF-8

notification:
  channels:
    das-reminder: "das-reminder-channel"
    limite-mei: "limite-mei-channel"
    backup: "backup-reminder-channel"

server:
  port: ${PORT:8080}

---
# Profile de desenvolvimento (local)
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/contasimplesmei}
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
  jpa:
    database-url: ${DATABASE_URL}
    properties:
      hibernate:
        jdbc:
          url: ${DATABASE_URL}
    hibernate:
      ddl-auto: create
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
app:
  cors:
    allowed-origins: http://localhost:5173

---
# Profile de produção (Railway)
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/contasimplesmei}
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
  jpa:
    database-url: ${DATABASE_URL}
    properties:
      hibernate:
        jdbc:
          url: ${DATABASE_URL}
    hibernate:
      ddl-auto: create
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
app:
  cors:
    allowed-origins: https://contasimplesmei.com,https://www.contasimplesmei.com

---
# Profile Docker
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: ${DATABASE_URL}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
    show-sql: ${SPRING_JPA_SHOW_SQL:false}
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        format_sql: true
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
      timeout: 2000ms

# Configurações de CORS para Docker
app:
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000}

# Configurações de Logging
logging:
  level:
    com.contasimplesmei: INFO
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

# Actuator para health checks
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always